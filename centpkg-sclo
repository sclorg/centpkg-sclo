#!/bin/bash

# This is a wrapper script around fedpkg and cbs utility, that is especially
# designed for working with packages and repos in SCLo SIG group.
#
# The API should be the same as for centpkg, but currently uses Fedora's
# look-aside cache for storing binary files and github repos under
# sclorg-distgit organization.
#
# The branches we use for dist-git (on github) are following this regexp:
#
#   r'sig-(?P<signame>\w+)(?P<centosversion>\d)-?(?P<projectname>\w+)?-?(?P<releasename>\w+)?'
# (based on https://wiki.centos.org/BrianStinson/GitBranchesandKojiTags)
#
# while:
#   <projectname> is SCL name (including prefix sclo-, rh- if there is one in SCL name
#   <releasename> is the namespace where the SCL is part of ('rh' for collections
#                 that are rebuild of RHSCL or 'sclo' for other SCLs)

GITHUB_ORG=https://github.com/sclorg-distgit

get_branch_info() {
  # parsing branch name, we can get scl name, namespace and EL version
  # in sclo a branch is called like sig-sclo6-rh-mariadb100-rh
  export branch=$(git rev-parse --abbrev-ref HEAD)

  if echo "${branch}" | grep -e '^sig-sclo\([0-9]*\)-\(.*\)-\([a-z]*\)$' &>/dev/null ; then
    export el_ver=$(echo "${branch}" | sed -e 's/^sig-sclo\([0-9]*\)-\(.*\)-\([a-z]*\)$/\1/')
    export scl=$(echo "${branch}" | sed -e 's/^sig-sclo\([0-9]*\)-\(.*\)-\([a-z]*\)$/\2/')
    export namespace=$(echo "${branch}" | sed -e 's/^sig-sclo\([0-9]*\)-\(.*\)-\([a-z]*\)$/\3/')
  else
    # trying to get branch and sclname from cmdline args
    while [ -n "$2" ] ; do
      case "$1" in
        --el_ver) el_ver="$2" ;;
        --scl) scl="$2" ;;
        --namespace) namespace="$2" ;;
        *) ;;
      esac
    shift
    done
  fi

  if ! [ -n "$el_ver" -a -n "$scl" -a -n "$namespace" ] ; then
    echo "Error: Branch could not be parsed properly."
    echo
    usage
  fi
}

srpm() {
  fedpkg sources
  rpmbuild -bs --nodeps --define "_sourcedir ." --define "_srcrpmdir ." --define "dist .el${el_ver}" -D "scl ${scl}" `fedpkg gimmespec`
}

get_srpm() {
  srpm | sed -e 's/^Wrote: \.\///'
}

scratch_build() {
  cbs build --scratch $@ "sclo${el_ver}-${scl}-${namespace}-el${el_ver}" `get_srpm`
}

build() {
  if [ -n "`git diff origin/$branch`" ] ; then
    echo "You must commit and push changes before building."
    git status
    return 1
  fi
  cbs build $@ "sclo${el_ver}-${scl}-${namespace}-el${el_ver}" `get_srpm`
}

clone() {
  if [ -z "${1}" ] ; then
    echo "Error: No argument given to clone. Please, specify component name without SCL prefix."
    echo
    usage
  fi

  git clone "${GITHUB_ORG}/${1}.git"

  retval=$?
  if [ $retval -ne 0 ] ; then
    echo "Error: 'git clone' call failed, it may be because requested repository is not created yet."
    echo "Create the repository first at ${GITHUB_ORG}."
    exit $retval
  fi
}

prep() {
  fedpkg --dist "rhel-${el_ver}" prep
}

branch_exists() {
  if [ -z "${1}" ] ; then
    echo "You must set branch name as parameter of branch_exists"
    exit 1
  fi
  [ -n "$(git branch --list ${1})" ] && return 0 || return 1
}

create_branch() {
  if [ -z "${2}" ] ; then
    echo "Error: action create-branch requires two parameters: <scl-name> <centos-version> [ <namespace> ]"
    echo "<scl-name>        Name of the collection this component is prepared for"
    echo "<centos-version>  Version '6', '7', ..."
    echo "<namespace>       Namespace 'rh' or 'sclo', rh is used if not specified"
    echo
    usage
  fi
  scl=${1}
  el_ver=${2}
  namespace=${3-rh}
  branch="sig-sclo${el_ver}-${scl}-${namespace}"
  branch_exists "${branch}" && echo "Branch ${branch} already exists." && return
  git checkout -b "${branch}"
}

usage() {
  echo "Usage `basename $0` {build,clone,commit,create-branch,help,import,local,prep,pull,scratch-build,srpm}"
  echo
  echo "Actions except create-branch work the same as we know it from fedpkg."
  echo "Action create-branch creates a new branch in current repository."
  echo "For creating entirely new repository, go to ${GITHUB_ORG}."
  echo
  echo "For description an usage of other commands, see 'fedpkg help' output."
  echo
  echo "Some commands need to have some arguments (EL version, SCL name, SCLo namespace) which are taken from actual branch by default."
  echo "If you work with a branch that cannot be parsed, you may specify by arguments:"
  echo "  --el_ver [6|7]"
  echo "  --namespace [rh|scl]"
  echo "  --scl <scl-name>"
  echo
  echo "Example workflow is available in https://github.com/sclorg/centpkg-sclo/blob/master/README.md."
  exit 1
}

if [ -z "${1}" ] ; then
  usage
fi

action="${1}"
shift

# some actions don't need to have branch to be properly parsed
case "${action}" in
  clone|switch-branch|create-branch|help|import) ;;
  *) get_branch_info $@ ;;
esac

case "${action}" in
  srpm) srpm ;;
  clone) clone $@;;
  build) build $@ ;;
  prep) prep $@ ;;
  scratch-build) scratch_build $@ ;;
  create-branch) create_branch $@ ;;
  help) usage ;;
  local) fedpkg --dist "el${el_ver}" $@ local ;;
  pull|commit|switch-branch|import) fedpkg ${action} $@ ;;
  *) usage ;;
esac

